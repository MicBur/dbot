version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    env_file:
      - .env
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000" 
    volumes:
      - ./backend:/app
      - ./trained_models:/app/trained_models
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - yfinance_service 

  # Separater Container für alpaca-trade-api, falls nötig
  # alpaca_service:
  #   build:
  #     context: ./alpaca_service
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env

  yfinance_service: # NEU: yfinance Service aktivieren
    build:
      context: ./yfinance_service # Pfad zum Docker-Kontext des yfinance-Service
      dockerfile: Dockerfile    # Name des Dockerfiles im yfinance_service Verzeichnis
    ports:
      - "8001:8001"             # Port-Mapping
    volumes:
      - ./yfinance_service:/app_yfinance # Mount für Code-Änderungen während der Entwicklung
    restart: unless-stopped

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env # Für POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes: # Optional: Redis-Daten persistent machen
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: # Optional: Definiere das Volume für Redis
